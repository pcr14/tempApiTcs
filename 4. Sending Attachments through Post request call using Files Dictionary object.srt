1
00:00:00,950 --> 00:00:07,780
So one last and important topic before we wrap up a testing discussion is how to send attachments,

2
00:00:07,810 --> 00:00:11,080
throw a cold sweat by Python Request Library.

3
00:00:11,630 --> 00:00:19,970
So some of your apps are required to send attachments to the server and to get the response back accordingly.

4
00:00:20,000 --> 00:00:22,210
So how you can send this file attachments?

5
00:00:22,460 --> 00:00:22,940
Let's see.

6
00:00:22,940 --> 00:00:23,640
It's very simple.

7
00:00:24,170 --> 00:00:30,410
So if you see this documentation of a request, then search for files.

8
00:00:31,340 --> 00:00:35,120
You see that post multiple might be and Gordon files.

9
00:00:35,900 --> 00:00:37,190
And this is topic.

10
00:00:42,150 --> 00:00:49,590
So here these guys are sending an attachment, you can see that they were using a dictionary again in

11
00:00:49,590 --> 00:00:50,200
dictionary.

12
00:00:51,090 --> 00:00:55,050
The key value is find what they want to send and value.

13
00:00:55,050 --> 00:00:56,800
It is the attachment.

14
00:00:56,820 --> 00:00:57,760
What do you want to send?

15
00:00:57,870 --> 00:01:00,590
They were sending in the open mode, OK?

16
00:01:00,600 --> 00:01:04,720
They were giving the access to read because that is important, right?

17
00:01:04,740 --> 00:01:09,900
If you are sending the file, you have to give the permission of how this file can be used by Python.

18
00:01:10,290 --> 00:01:13,010
OK, and this is how you need to send your file.

19
00:01:13,380 --> 00:01:20,370
Once you have this entire dictionary in one file object, then just like how you have used in the previous

20
00:01:20,370 --> 00:01:26,850
letter, like cookies equals to that variable here file sequel's to send that file.

21
00:01:27,030 --> 00:01:30,070
So this is how you will send it in attachment.

22
00:01:30,390 --> 00:01:33,180
Let's do one practical example for you to understand this.

23
00:01:33,660 --> 00:01:34,110
So.

24
00:01:35,200 --> 00:01:42,640
There is one area called Pet Store DARD Swiger, not able you can just Google this and Google this in

25
00:01:42,640 --> 00:01:45,620
your browser and you will be landed on this webpage.

26
00:01:46,090 --> 00:01:52,060
So here there is an API which will help you to upload an image.

27
00:01:52,810 --> 00:01:55,120
OK, so this is an end point.

28
00:01:56,200 --> 00:02:03,120
OK, you have to take us back to this pet store, Durchslag and I will slash Baggaley slash upload image.

29
00:02:03,490 --> 00:02:07,830
So this is completely foreign and this is a post request, OK?

30
00:02:09,090 --> 00:02:13,380
These are the parameters, but it is something you have to pass.

31
00:02:14,280 --> 00:02:15,770
You can give any random idea.

32
00:02:16,920 --> 00:02:21,880
And you have to send fine, which we just saw how to do that.

33
00:02:21,910 --> 00:02:24,110
Here you have to send file information.

34
00:02:24,510 --> 00:02:31,560
So in response, you get back to an interstate escort and it will give you information whether your

35
00:02:31,560 --> 00:02:33,990
attachment is successfully uploaded or not.

36
00:02:34,380 --> 00:02:35,580
So let's see this case.

37
00:02:35,970 --> 00:02:37,530
It's very simple again.

38
00:02:40,930 --> 00:02:43,480
Let me start with attachments.

39
00:02:48,860 --> 00:02:49,670
So there you are.

40
00:02:49,700 --> 00:02:51,050
Here is.

41
00:02:52,150 --> 00:02:56,110
Pet store, this is the best you ought to have to start with.

42
00:02:57,780 --> 00:03:02,520
And after that, see, I'm just using whatever the information I'm having here.

43
00:03:03,000 --> 00:03:08,390
OK, so this is not something which I'm doing with experience.

44
00:03:08,610 --> 00:03:13,350
So basically, once I land here, this is the baseball and this is the resource.

45
00:03:13,590 --> 00:03:18,250
So to get an end point, you have to concatenate these to which I did here, OK?

46
00:03:18,510 --> 00:03:21,330
And these guys are telling me this is a post request.

47
00:03:21,690 --> 00:03:23,880
So simply requests dark.

48
00:03:24,150 --> 00:03:27,270
I would use post metal and I will send this to you all.

49
00:03:28,430 --> 00:03:33,050
OK, and next, they were saying to upload an image.

50
00:03:35,100 --> 00:03:36,850
So one is a bad idea.

51
00:03:37,200 --> 00:03:40,120
So here you have to give the real elite.

52
00:03:40,440 --> 00:03:44,430
So this is like a placeholder to provide, but it.

53
00:03:45,120 --> 00:03:51,720
So let me provide one idea, which is a valid for this so you can use this nine, eight, four, three,

54
00:03:51,720 --> 00:03:52,440
two, one seven.

55
00:03:53,430 --> 00:03:59,670
So I have seen this in one of the examples that Despedida is working so you can use this, but this

56
00:03:59,670 --> 00:04:01,920
is existing territory for this database.

57
00:04:02,220 --> 00:04:06,050
So far this pettily we are uploading an image, right.

58
00:04:06,360 --> 00:04:10,560
So this parameter we have sent, it is still metadata.

59
00:04:10,590 --> 00:04:11,400
This is optional.

60
00:04:11,400 --> 00:04:12,090
You can ignore it.

61
00:04:12,510 --> 00:04:13,350
And the fight.

62
00:04:13,890 --> 00:04:16,820
So file you have to send as an attachment.

63
00:04:17,070 --> 00:04:21,030
So files equals to and send that complete.

64
00:04:22,880 --> 00:04:30,340
File variable, so let's create files variable here, just like how it was given for us in documentation.

65
00:04:30,590 --> 00:04:34,900
So I am copying this, the sample given for us in documentation.

66
00:04:35,540 --> 00:04:35,820
Right.

67
00:04:35,900 --> 00:04:37,340
So this is a dictionary.

68
00:04:38,330 --> 00:04:45,600
And key value is vital must and here you have to provide the file.

69
00:04:45,650 --> 00:04:48,590
What you want to send as an attachment.

70
00:04:48,980 --> 00:04:53,030
So I have one file in my system, just a PDF file.

71
00:04:54,610 --> 00:04:57,800
And he made it so that I will give the part here.

72
00:04:58,650 --> 00:05:05,930
OK, so basically I'm telling that go and upload this file as an attachment to this app.

73
00:05:06,340 --> 00:05:06,620
Right.

74
00:05:06,940 --> 00:05:13,900
So I'm using open because whenever you are sending any files, you have to tell on permission basis,

75
00:05:14,170 --> 00:05:16,330
you are actually sending it in Python.

76
00:05:16,570 --> 00:05:22,810
OK, so you are aware that we are opening this file and read more if you have any questions to understand

77
00:05:22,810 --> 00:05:23,080
this.

78
00:05:23,290 --> 00:05:26,290
Well, I taught my Python basic section there.

79
00:05:26,290 --> 00:05:29,570
I have explained different permissions and how to open the file.

80
00:05:29,800 --> 00:05:34,060
So assuming that you have watched this that video, I'm giving you this.

81
00:05:34,250 --> 00:05:36,150
So basically you are sending file input, right.

82
00:05:36,400 --> 00:05:37,440
So this is a variable.

83
00:05:37,990 --> 00:05:41,110
So files equals to face that time.

84
00:05:41,470 --> 00:05:44,280
Now, this call is made.

85
00:05:44,290 --> 00:05:51,430
Now, when you submit this, you are going to submit the supposed to call with an attachment.

86
00:05:52,060 --> 00:05:53,230
That is the magic.

87
00:05:53,970 --> 00:05:59,110
OK, so you get your response back in any variable, let's say, are.

88
00:06:00,710 --> 00:06:02,900
So spaces here, it's not quite.

89
00:06:04,710 --> 00:06:12,920
So if it is successfully sent an attachment, then you should see this data score 200 nice, right?

90
00:06:13,320 --> 00:06:18,260
And we will also see the response just to see if it is successfully uploaded or not.

91
00:06:19,860 --> 00:06:27,660
OK, so if it is successfully uploaded, then you should get a response back as 200 successful operation.

92
00:06:28,140 --> 00:06:28,620
Awesome.

93
00:06:29,940 --> 00:06:30,650
That's all right.

94
00:06:30,730 --> 00:06:35,430
So that's how you attach any files, whatever you want to your API.

95
00:06:36,300 --> 00:06:42,540
OK, let me run this can BroadSoft often and this will give us the response back.

96
00:06:43,800 --> 00:06:51,900
OK, so it complaint's not found, so we made some mistake, so it is saying that you all itself not

97
00:06:51,900 --> 00:06:52,350
found.

98
00:06:52,980 --> 00:06:54,880
OK, let's try to investigate.

99
00:06:55,530 --> 00:06:57,540
I think I got the issue already.

100
00:07:02,190 --> 00:07:06,510
So if you carefully see here, they were saying baseball is a pet store.

101
00:07:06,540 --> 00:07:07,500
That's why I got to that.

102
00:07:07,500 --> 00:07:10,900
I was like, OK, so you can read here.

103
00:07:11,400 --> 00:07:12,870
So in our case, we missed.

104
00:07:12,910 --> 00:07:13,350
We do.

105
00:07:14,700 --> 00:07:18,790
So on top of all this, basically what you have to give this Rizzo's name, right.

106
00:07:19,230 --> 00:07:22,170
So we took from you all, but not here.

107
00:07:22,260 --> 00:07:27,480
They have clearly given that this is the place you just because you have given wrong baseball, it could

108
00:07:27,480 --> 00:07:34,920
not find this address in that sample and it given you the four, not four not found at it, OK.

109
00:07:34,950 --> 00:07:37,250
So let me run on this one more time.

110
00:07:37,710 --> 00:07:40,440
I hope this time we have given correct in point.

111
00:07:41,800 --> 00:07:49,100
But fact you see that it gave us 200 status discord and it's me today that we did not send anything.

112
00:07:49,480 --> 00:07:51,990
So here they were asking to send additional metadata.

113
00:07:52,000 --> 00:07:55,020
Also a description about this document.

114
00:07:55,390 --> 00:08:03,250
I did not pass this because I saw it original, but you can see that file uploaded audio being so the

115
00:08:03,250 --> 00:08:06,220
file is around eighty one thousand eighty five bytes.

116
00:08:06,780 --> 00:08:10,690
OK, so this message concludes that you were fine.

117
00:08:11,500 --> 00:08:18,430
Not being with these many bytes is successfully uploaded to their server for a better idea of nine eight

118
00:08:18,430 --> 00:08:23,410
four three two one seven for this very your image is now successfully uploaded.

119
00:08:24,010 --> 00:08:30,810
OK, so this is how you can send any files as an attachment to your API request calls.

120
00:08:31,450 --> 00:08:37,700
So just follow that official documentation and then you will understand how to use this efficiently

121
00:08:38,860 --> 00:08:39,420
already.

122
00:08:39,480 --> 00:08:41,530
So that's pretty much about this section.

123
00:08:41,920 --> 00:08:44,670
And here I'm wrapping up this API discussion.

124
00:08:44,920 --> 00:08:46,150
We are still not done.

125
00:08:46,270 --> 00:08:47,520
In the next section.

126
00:08:47,530 --> 00:08:54,880
I will talk about databases and how to retrieve the values from database tables and thereafter once

127
00:08:54,880 --> 00:08:55,870
you get that concept.

128
00:08:56,140 --> 00:09:03,190
So now we have given the API payloads everything in our test files.

129
00:09:03,190 --> 00:09:03,430
Right.

130
00:09:03,670 --> 00:09:09,700
So instead of having that payload information for an book, everything from testifies, we will dig

131
00:09:09,700 --> 00:09:12,760
those values from database tables.

132
00:09:13,150 --> 00:09:22,030
OK, so our payload, Jason, payload for our API input request will be dynamically generated from database

133
00:09:22,720 --> 00:09:24,770
so that we will start from next section.

134
00:09:25,090 --> 00:09:32,570
So meanwhile, if you are looking for practice to get any interview questions, assistance in this on

135
00:09:32,770 --> 00:09:39,220
state we are testing, you can message me because we are done with all the concepts of API automation

136
00:09:39,430 --> 00:09:42,850
that's just retrieving from databases is the only thing left now.

137
00:09:43,120 --> 00:09:49,300
So reach out to me here and I can help you with Python Rest API interview questions which will help

138
00:09:49,300 --> 00:09:53,770
you to clear any interview regarding Python API testing.

139
00:09:54,300 --> 00:09:55,570
OK, thank you.
