1
00:00:00,950 --> 00:00:05,790
Welcome, guys, welcome to Back End Automation Testing with Python.

2
00:00:06,350 --> 00:00:08,400
This is your instructor, Rahul Shetty.

3
00:00:09,080 --> 00:00:15,860
So first, we will try to understand why we require this back and automation and how this course will

4
00:00:15,860 --> 00:00:24,410
help you to become Pythonesque did with the knowledge of automation testing on every level of Uber software

5
00:00:24,410 --> 00:00:25,060
lifecycle.

6
00:00:25,720 --> 00:00:26,030
Right.

7
00:00:26,270 --> 00:00:32,900
So firstly, this backend automation came into the limelight from last few years.

8
00:00:32,900 --> 00:00:35,660
It's beginning the most Basinski work wife.

9
00:00:36,140 --> 00:00:43,100
So earlier when we say automation, it's all about end automation, like automating your browsers.

10
00:00:43,700 --> 00:00:52,280
Very one application is rendering, but due to agile practices, faster feedback and more of quality

11
00:00:52,280 --> 00:00:53,060
practices.

12
00:00:53,300 --> 00:00:56,400
Now testing is done in every layer.

13
00:00:56,630 --> 00:01:01,420
It's not only fronton, so testing should be also performed in the middle layer.

14
00:01:01,480 --> 00:01:02,720
Very apposite.

15
00:01:02,960 --> 00:01:08,990
And it's also required in the backend layer where you have SQL Server databases setting and your bank

16
00:01:08,990 --> 00:01:10,100
jobs will also be there.

17
00:01:10,430 --> 00:01:18,290
So to give the faster feedback of how your application is behaving, so now people are depending upon

18
00:01:18,290 --> 00:01:23,940
each and every layer and they have a quality check, get on every layer of your software project.

19
00:01:24,290 --> 00:01:27,520
So this is where backend automation testing comes into beta.

20
00:01:28,220 --> 00:01:35,510
So any type of testing which is not part of your browser automation, comes and fall under this back

21
00:01:35,510 --> 00:01:37,180
in automation, right?

22
00:01:38,080 --> 00:01:45,520
And this is where a state rules comes into picture as a Pythonesque, that you will not be responsible

23
00:01:45,700 --> 00:01:53,050
only for your Frontin automation with Selenia, you should also have knowledge on testing various layers

24
00:01:53,050 --> 00:01:54,750
of your entire project.

25
00:01:55,030 --> 00:01:57,880
So you should be able to perform EPA testing.

26
00:01:58,060 --> 00:02:02,620
You should be able to retrieve the data from your databases with Python code.

27
00:02:02,770 --> 00:02:09,580
And you should also be able to connect to your service by establishing a connection and execute bad

28
00:02:09,580 --> 00:02:09,960
jobs.

29
00:02:10,210 --> 00:02:17,590
So as an estimate, you will be responsible to perform any kind of automation in your End-To-End full

30
00:02:17,590 --> 00:02:18,670
stack project.

31
00:02:19,090 --> 00:02:25,990
OK, so this course will help you to fulfill that gap by teaching all the automation utilities provided

32
00:02:25,990 --> 00:02:28,930
by the python to perform these operations.

33
00:02:29,620 --> 00:02:32,360
And as a switch, this is very important.

34
00:02:32,950 --> 00:02:39,280
So ideally, if you have any real time experience, you can correlate the scenario that there are some

35
00:02:39,280 --> 00:02:41,970
bad jobs which will run in the backend.

36
00:02:42,340 --> 00:02:46,260
So that will have an effect of showing some data on the front end.

37
00:02:46,600 --> 00:02:54,880
OK, so these days people are expecting to test those bad jobs as well by passing the parameters and

38
00:02:54,880 --> 00:02:56,990
see how that bad jobs is responding.

39
00:02:57,400 --> 00:03:04,490
So basically bad jobs give the data in the form of discern XML CSP files.

40
00:03:04,750 --> 00:03:10,900
So one should be able to send parameters to those bad jobs and received a response and pass those days

41
00:03:10,900 --> 00:03:17,890
and find CSP files to see if the outcome is expected and these bad jobs will sit somewhere in the Linux

42
00:03:17,890 --> 00:03:18,430
servers.

43
00:03:18,880 --> 00:03:25,060
So from your local mission, you should create an associates connection to talk to the bad jobs which

44
00:03:25,060 --> 00:03:30,200
are sitting in Linux servers and execute the bad jobs from those Linux servers.

45
00:03:30,490 --> 00:03:33,260
So there is a lot of automation involved here.

46
00:03:33,550 --> 00:03:39,430
So as an astute engineer, you should be able to create a solution for all this process and execute

47
00:03:39,610 --> 00:03:42,790
you your validation on these back and utilities.

48
00:03:43,240 --> 00:03:48,680
OK, and this goes also give us one more utility call scrapping.

49
00:03:49,450 --> 00:03:56,950
So this is also one of the interesting thing, because you can actually scrap your webpage and extract

50
00:03:56,950 --> 00:03:58,040
the content out of it.

51
00:03:58,330 --> 00:04:03,690
This is heavily used for data science projects and I would also cover that.

52
00:04:03,850 --> 00:04:09,630
So that way you will have some additional knowledge of how to scrub the data in Web pages using Python.

53
00:04:10,090 --> 00:04:10,390
Right.

54
00:04:10,690 --> 00:04:15,730
So that's how this is targeted to teach all the utilities.

55
00:04:16,310 --> 00:04:16,610
Right.

56
00:04:16,840 --> 00:04:22,480
But do remember, before we start any cost content, we will also have python basics.

57
00:04:22,990 --> 00:04:30,040
If you are not aware of Python, you need not worry because we have exclusive to enough of US content

58
00:04:30,340 --> 00:04:37,480
after this video so that you can learn a python from scratch and then you can start going through this

59
00:04:37,480 --> 00:04:37,960
content.

60
00:04:37,960 --> 00:04:39,600
And one thing you should understand that.

61
00:04:39,940 --> 00:04:43,030
So we will complete this course in different projects.

62
00:04:43,600 --> 00:04:50,620
OK, so in Project one, you will understand about how to patriotisms using Python code and how to read

63
00:04:50,620 --> 00:04:56,390
the different file and write back to disinfects, because this knowledge is important for the API automation.

64
00:04:56,830 --> 00:05:01,510
So when you are performing API automation, you should be able to receive the response.

65
00:05:01,870 --> 00:05:03,220
Mostly response will be in this.

66
00:05:03,580 --> 00:05:08,410
So you should be able to pass the jassam and understand so far that this knowledge is required.

67
00:05:08,710 --> 00:05:13,330
So once we receive that knowledge and then we will go back to API automation.

68
00:05:13,810 --> 00:05:15,160
So that's our Project one.

69
00:05:15,820 --> 00:05:22,870
And next, as a project, I will show how to connect to database and retrieve that data from sequel

70
00:05:22,870 --> 00:05:25,590
tables using Python sequel Connector.

71
00:05:25,900 --> 00:05:31,870
And we will read the data from multiple results from database tables using Python.

72
00:05:32,110 --> 00:05:39,760
And then I will show how to integrate database results to API calls to deliver a decent payload to submit

73
00:05:39,780 --> 00:05:40,710
Europea request.

74
00:05:40,990 --> 00:05:47,230
So this way you will understand how to talk to databases, how to automate APIs, everything using Python

75
00:05:47,230 --> 00:05:47,500
code.

76
00:05:48,040 --> 00:05:48,340
Right.

77
00:05:48,670 --> 00:05:50,070
And that's a project number two.

78
00:05:50,590 --> 00:05:52,280
And next, we'll go to project number three.

79
00:05:52,450 --> 00:05:53,610
Again, this is an independent.

80
00:05:53,620 --> 00:06:00,040
Each project is independent and which will be not connected to previous project because in this course

81
00:06:00,040 --> 00:06:03,540
we will go over many utilities, OK?

82
00:06:03,820 --> 00:06:12,260
And 60 percent, you should have this knowledge because if you work with any bad jobs, the output of

83
00:06:12,260 --> 00:06:15,710
bad jobs will be mostly like CSP files.

84
00:06:16,150 --> 00:06:22,240
So here we will try to understand how to pursue CSB files, how to read and write to files using your

85
00:06:22,240 --> 00:06:22,990
Python code.

86
00:06:23,620 --> 00:06:27,490
And then I will start showing one interesting project again.

87
00:06:28,540 --> 00:06:30,860
By creating one A.W. Islamic server.

88
00:06:31,330 --> 00:06:37,330
Don't worry, I will show you the process, like how to set up one Linux server, you can get it from

89
00:06:37,330 --> 00:06:38,430
Amazon Web Services.

90
00:06:38,680 --> 00:06:40,330
We will launch one Linux service.

91
00:06:40,570 --> 00:06:46,570
And I will show how to establish connection to servers from your local Python using your credit card

92
00:06:46,570 --> 00:06:47,230
paramedical.

93
00:06:47,530 --> 00:06:52,780
And we will send the comments to Linux server to execute your bad jobs.

94
00:06:52,810 --> 00:06:57,610
This will be very interesting and we will download the files from another server to our mission.

95
00:06:57,930 --> 00:06:59,970
See, all this will happen in real time.

96
00:07:00,550 --> 00:07:06,640
So that's why I'm saying if you have real time experience working in any backend work like manual work,

97
00:07:06,640 --> 00:07:11,280
at least you can appreciate about automating all this process.

98
00:07:11,710 --> 00:07:15,700
So generally, all these bad jobs will be insecurely in some of our missions.

99
00:07:16,150 --> 00:07:19,750
So people generally log in manually and do all these activities.

100
00:07:19,960 --> 00:07:27,160
Yes, but you can automate and this is where people are looking now as an engineer, they want Python

101
00:07:27,160 --> 00:07:29,050
Guy to do all these operations.

102
00:07:29,650 --> 00:07:29,980
Right.

103
00:07:30,280 --> 00:07:36,490
And then finally, I will show one special topic, which is a bonus of importance of scrapping.

104
00:07:37,090 --> 00:07:42,600
So if you work with Python, then you should definitely have some light on this one scrapping stuff.

105
00:07:42,970 --> 00:07:48,580
This is heavily used in data science projects, so you can learn more about it in the project.

106
00:07:48,580 --> 00:07:48,840
No.

107
00:07:49,480 --> 00:07:56,860
And one important thing, so initially when I made this to Dorien, so this is confined to explaining

108
00:07:56,860 --> 00:08:04,930
only Python utilities for backend automation work, but with a lot deep dive into any test framework

109
00:08:04,930 --> 00:08:05,530
discussion.

110
00:08:05,710 --> 00:08:08,410
So that is the initial plan I had.

111
00:08:08,710 --> 00:08:15,340
But later on with people and many students, feedback that they need one framework to understand and

112
00:08:15,340 --> 00:08:22,540
automate this API test cases, then I have added ability framework which will help you to design from

113
00:08:22,540 --> 00:08:29,780
scratch and automate all your AP automation test cases using that ability behavior framework.

114
00:08:29,800 --> 00:08:37,810
OK, so I have added that framework after a complete chaos and then again on student feedback, submitted

115
00:08:37,810 --> 00:08:39,610
a framework for API.

116
00:08:39,610 --> 00:08:42,970
Automation is now available for discourse.

117
00:08:43,600 --> 00:08:48,520
You can find that once you have completed this project one and two, and then we will use this framework

118
00:08:48,520 --> 00:08:51,010
to automate API discusses what we discussed.

119
00:08:51,170 --> 00:08:58,230
OK, so this statement is now partially incorrect, so let's go and strike this part.

120
00:08:58,840 --> 00:09:06,160
So but basically the main focus of discourse is all about explaining the core python utilities because

121
00:09:06,160 --> 00:09:11,020
you will learn how to talk and make network connections using patternmaker utility.

122
00:09:11,020 --> 00:09:17,110
You will know where scaping, utilities, CSFI, Excel utilities, aliased connections, API, automation,

123
00:09:17,110 --> 00:09:18,160
database automation.

124
00:09:18,400 --> 00:09:22,990
You will see a lot of backend automation, utilities for bad jobs, automation.

125
00:09:22,990 --> 00:09:23,250
Right.

126
00:09:23,530 --> 00:09:25,360
So that is the main focus of this course.

127
00:09:25,600 --> 00:09:34,120
But I also adorability framework so that you will know how to create and how one backend automation

128
00:09:34,120 --> 00:09:36,300
framework for your API automation.

129
00:09:36,310 --> 00:09:40,570
OK, so this is the superabundance you will get from this goes.

130
00:09:41,630 --> 00:09:47,480
OK, so that's pretty much high level introduction about what you can expect from this back in automation,

131
00:09:47,490 --> 00:09:54,500
but by the end of this course, you can claim yourself as a pilot on Nasdaq and you can apply any jobs

132
00:09:54,500 --> 00:09:56,650
related to Paten automation testing.

133
00:09:57,350 --> 00:09:58,710
So that's it, guys.

134
00:09:58,790 --> 00:10:03,740
So let's get started with Python basics in the next section and take it from the visual.

135
00:10:03,740 --> 00:10:06,110
All the best and see you in the next section.

136
00:10:06,560 --> 00:10:07,130
Thank you.
