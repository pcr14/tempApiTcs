1
00:00:01,010 --> 00:00:01,700
Welcome back.

2
00:00:02,060 --> 00:00:09,500
So one last step of removing this resources information here, so I am calling this resources because

3
00:00:09,500 --> 00:00:18,590
in an end point, the actual resources like libraries and book for adding the book and EPA and for deleting

4
00:00:18,590 --> 00:00:18,940
the book.

5
00:00:18,950 --> 00:00:22,190
This is the resource library book.

6
00:00:22,550 --> 00:00:28,280
So this is the key word which will help you to reroute to the correct API resource.

7
00:00:28,670 --> 00:00:30,830
So this will reader to delete the book.

8
00:00:31,260 --> 00:00:38,540
And if you add an ebook and that will return to our book API in the end server.

9
00:00:39,200 --> 00:00:44,320
Now is this required to drive from separate files then?

10
00:00:44,360 --> 00:00:44,970
It depends.

11
00:00:45,110 --> 00:00:52,370
So for example, tomorrow, if somebody changes the resource name instead of a small letter, if they

12
00:00:52,370 --> 00:00:56,610
updated to capital letter, then all you got to start feeling.

13
00:00:56,900 --> 00:01:03,890
So if you are using this resource in 10 places, then you should come and update all dentist cases.

14
00:01:04,280 --> 00:01:05,160
So instant.

15
00:01:05,210 --> 00:01:11,150
If you have any central location where you access all these resources, then you can just updated one

16
00:01:11,150 --> 00:01:17,020
single place and all these deaths will be accessed, that resource in that center location.

17
00:01:17,030 --> 00:01:17,240
Right.

18
00:01:17,450 --> 00:01:20,330
So you need not change in all 10 places.

19
00:01:20,600 --> 00:01:21,980
That's the overall point.

20
00:01:22,010 --> 00:01:23,440
OK, let's quickly do that.

21
00:01:23,450 --> 00:01:24,530
It should be very quick.

22
00:01:24,530 --> 00:01:30,110
And with that, we can wrap this discussion and go forward with another new concept in API.

23
00:01:30,890 --> 00:01:36,440
Now, utilities, and I would call it as resources.

24
00:01:37,190 --> 00:01:44,480
And this time I will create one class, OK, one simple class API resources.

25
00:01:44,630 --> 00:01:46,160
OK, that sounds good.

26
00:01:47,600 --> 00:01:47,920
Yeah.

27
00:01:47,930 --> 00:01:51,380
Here you can start creating variables of that class.

28
00:01:52,310 --> 00:02:00,980
I book and delete all the variables, whatever you have as a resource since you can declare all.

29
00:02:01,340 --> 00:02:07,700
So basically in real time you will have around 10 or 12 resources to do everything you can declare here.

30
00:02:08,330 --> 00:02:13,530
Now in our example, we were using Adblock and this is the string, right?

31
00:02:14,030 --> 00:02:19,160
So let's go back to our resources file and have the stream declared here.

32
00:02:19,610 --> 00:02:22,700
And for delete also, we have an example.

33
00:02:31,960 --> 00:02:32,270
Right.

34
00:02:32,590 --> 00:02:39,940
So you just created one class and that will take care of creating all variables and you can simply call

35
00:02:39,940 --> 00:02:45,280
this variable with class name, not variable, because these are class variables.

36
00:02:45,580 --> 00:02:51,140
OK, class variables can be simply accessed with NBA resources, Dot Adbul.

37
00:02:51,520 --> 00:02:58,930
So like that, if you have another resource, I think we have also walkden resource like get book with

38
00:02:58,930 --> 00:02:59,660
Ortolani.

39
00:03:00,490 --> 00:03:04,440
OK, so you can go ahead and declare that resource name as well here.

40
00:03:04,780 --> 00:03:06,870
So it's up to you as an assignment.

41
00:03:07,180 --> 00:03:09,260
So let's actually change this ad book.

42
00:03:09,550 --> 00:03:09,830
Right.

43
00:03:10,030 --> 00:03:11,020
So now come back to you.

44
00:03:11,020 --> 00:03:12,970
But actually just post.

45
00:03:13,950 --> 00:03:18,250
API example, and you need to import that glass from.

46
00:03:19,200 --> 00:03:28,810
And what is that finding sources like these sources import stuff so that it will import all resources

47
00:03:28,810 --> 00:03:31,200
and functions, metals to whatever you have in that fight.

48
00:03:31,860 --> 00:03:33,890
Yeah, so it's in utilities.

49
00:03:33,900 --> 00:03:35,460
So let's give you the latest name.

50
00:03:37,880 --> 00:03:46,050
OK, now you can remove this, so this is the complete Yodle, right, instead of writing this completely

51
00:03:46,070 --> 00:03:49,300
out of here, I will create one variable.

52
00:03:49,880 --> 00:03:57,950
I would say you are an equal to Albiston in one variable, and I will simply call that you are all here

53
00:03:58,160 --> 00:04:05,150
instead of having a long list of characters in this post that you see that now it's more readable.

54
00:04:05,150 --> 00:04:07,100
Right, because let's have everything here.

55
00:04:08,270 --> 00:04:11,300
OK, so I will remove this.

56
00:04:11,960 --> 00:04:19,430
And now if you want to access the results, as I told you, that you can access it with what is the

57
00:04:19,450 --> 00:04:20,310
class name here?

58
00:04:20,600 --> 00:04:21,350
Yeah, this one.

59
00:04:21,350 --> 00:04:21,560
Right.

60
00:04:21,560 --> 00:04:22,670
AIPA resources.

61
00:04:22,880 --> 00:04:25,880
You can now access it here because you imported that package.

62
00:04:26,300 --> 00:04:30,580
AIPA Resources, DOT and book and perfect.

63
00:04:30,590 --> 00:04:37,670
That's all you need to do, reformat and that will go away and you'll see that this variable now holds

64
00:04:37,670 --> 00:04:46,100
that end point and it can down with results and that complete value we are placing in one variable and

65
00:04:46,100 --> 00:04:47,840
that you all you just placed here.

66
00:04:48,230 --> 00:04:50,320
And now it looks very simple, right?

67
00:04:50,570 --> 00:04:53,840
Similarly, that's also what I will do.

68
00:04:54,860 --> 00:04:59,860
I will create one variable here and I will push that into that variable.

69
00:04:59,870 --> 00:05:02,270
So here is the value which is holding everything.

70
00:05:02,600 --> 00:05:03,470
So copy this.

71
00:05:03,620 --> 00:05:08,210
And instead of having all the dictionary here, you can give that variable value here.

72
00:05:09,330 --> 00:05:15,870
OK, so that's where I think you can break all of this in one single line without having multiple,

73
00:05:15,870 --> 00:05:22,560
let's see how we optimize the code three, four letters back.

74
00:05:22,560 --> 00:05:30,000
It was like messy code with so much of information, but now everything is properly organized so that

75
00:05:30,000 --> 00:05:33,570
one can understand that we are doing one.

76
00:05:33,570 --> 00:05:38,720
Has DDP post a request to the CRM that you are is coming from here.

77
00:05:38,730 --> 00:05:45,000
This is an endpoint coming from one configuration file and that are the book resources coming from the

78
00:05:45,000 --> 00:05:45,990
resources file.

79
00:05:46,260 --> 00:05:50,840
So all those came from externally and we concatenated and created one end point.

80
00:05:51,090 --> 00:05:58,990
So the complete calling Amapa is done in one single line with driving the data from external resources.

81
00:05:59,490 --> 00:06:06,600
So now you run the test one more time and you'll see that nothing is breaking, everything is fast.

82
00:06:06,600 --> 00:06:09,540
And that's how we optimized and cleaned our code.

83
00:06:09,810 --> 00:06:16,950
So I would give you as an assignment to do the same for delete book as well, so you can download the

84
00:06:16,950 --> 00:06:25,920
code of this project from the very next lecture and repeat and place all this on the book API stuff.

85
00:06:26,460 --> 00:06:27,530
It's very simple.

86
00:06:27,540 --> 00:06:30,480
I don't think you really need much time to do this.

87
00:06:30,750 --> 00:06:34,100
Create one more Yoran and Doodle do for the book aspect.

88
00:06:34,410 --> 00:06:34,790
All right.

89
00:06:35,100 --> 00:06:40,830
So that's pretty much how about this lecture, guys, in the next lecture, let's talk about authentication

90
00:06:40,830 --> 00:06:41,540
in APIs.

91
00:06:41,670 --> 00:06:47,790
If you have a scope to authenticate yourself to hit that request, how would you do that?

92
00:06:48,300 --> 00:06:49,610
Let's see that in our next lecture.

93
00:06:49,980 --> 00:06:50,520
Thank you.
